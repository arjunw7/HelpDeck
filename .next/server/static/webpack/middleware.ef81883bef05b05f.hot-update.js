"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(middleware)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n\n\nasync function middleware(req) {\n    const res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].next();\n    const supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createMiddlewareClient)({\n        req,\n        res\n    });\n    // Get hostname (e.g. demo.helpdeck.app, helpdeck.app)\n    const hostname = req.headers.get(\"host\") || \"\";\n    const isProd = \"development\" === \"production\";\n    const isPublicDomain = hostname.endsWith(\".helpdeck.app\") && hostname !== \"helpdeck.app\";\n    // Special case for localhost or development\n    // if (!isProd && req.headers.get('x-public-preview') === 'true') {\n    //   // Allow preview in development\n    //   return await handlePublicKnowledgeBase(req, res, supabase);\n    // }\n    // // Handle public knowledge base domains\n    // if (isPublicDomain) {\n    //   return await handlePublicKnowledgeBase(req, res, supabase);\n    // }\n    // Refresh session if it exists\n    const { data: { session } } = await supabase.auth.getSession();\n    // Public routes that don't require authentication\n    const publicRoutes = [\n        \"/\",\n        \"/auth\",\n        \"/features\",\n        \"/pricing\",\n        \"/ai\"\n    ];\n    const isPublicRoute = publicRoutes.some((route)=>req.nextUrl.pathname === route);\n    // If the route is public, allow access\n    if (isPublicRoute) {\n        return res;\n    }\n    // Protected routes\n    const protectedRoutes = [\n        \"/knowledge-base\",\n        \"/settings\"\n    ];\n    const isProtectedRoute = protectedRoutes.some((route)=>req.nextUrl.pathname.startsWith(route));\n    // If accessing a protected route and no session, redirect to login\n    // if (isProtectedRoute && !session) {\n    //   const redirectUrl = new URL('/auth', req.url);\n    //   redirectUrl.searchParams.set('redirectTo', req.nextUrl.pathname);\n    //   return NextResponse.redirect(redirectUrl);\n    // }\n    // Check trial status for protected routes\n    if (isProtectedRoute) {\n        const { data: subscription } = await supabase.from(\"subscriptions\").select(\"trial_end, status\").single();\n        const trialEnded = subscription?.trial_end && new Date(subscription.trial_end) < new Date();\n        const noActiveSubscription = !subscription?.status || subscription.status !== \"active\";\n        if (trialEnded && noActiveSubscription) {\n            // Redirect to pricing page if trial ended and no active subscription\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(new URL(\"/pricing\", req.url));\n        }\n    }\n    return res;\n}\nasync function handlePublicKnowledgeBase(req, res, supabase) {\n    try {\n        // For local development, use a test organization slug\n        const hostname = req.headers.get(\"host\") || \"\";\n        const slug =  true ? \"procuzy\" : 0;\n        // Fetch organization and verify it's published\n        const { data: org } = await supabase.from(\"organizations\").select(`\n        *,\n        customize_settings (settings)\n      `).eq(\"slug\", slug).eq(\"is_published\", true).single();\n        if (!org) {\n            // Return 404 if org not found or not published\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rewrite(new URL(\"/not-found\", req.url));\n        }\n        // Create base response\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].next();\n        // Add org data and settings to headers\n        response.headers.set(\"x-organization-id\", org.id);\n        response.headers.set(\"x-kb-settings\", JSON.stringify(org.customize_settings?.settings || {}));\n        // Rewrite to public knowledge base pages\n        const path = req.nextUrl.pathname;\n        const rewriteUrl = path === \"/\" ? \"/kb\" : `${path}`;\n        const url = new URL(rewriteUrl, req.url);\n        // Clone the response and rewrite the URL\n        const rewrittenResponse = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rewrite(url, {\n            headers: response.headers\n        });\n        return rewrittenResponse;\n    } catch (error) {\n        console.error(\"Error in public knowledge base middleware:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rewrite(new URL(\"/not-found\", req.url));\n    }\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */ \"/((?!_next/static|_next/image|favicon.ico|public/).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});